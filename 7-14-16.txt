var people = {
  "joe" : {
    first_name: "Joe",
    last_name: "Jenkins",
    preferences: {
      meal: "meat",
      favorite_genres: ["jazz", "soul"],
    },
    sitting_next_to: "sue",
    correspondence: [
      {date: "11/4/2014", description: "sent invitation"},
      {date: "12/2/2014", description: "replied yes"},
    ],
  },
  "sue" : {
    first_name : "Sue",
    last_name : "Summers",
    preferences : {
      meal : "fish",
      favorite_genres : ["funk", "blues"],
    },
    sitting_next_to: "joe",
    correspondence: [
      {date: "11/7/2014", description: "sent invitation"},
      {date: "12/8/2014", description: "replied yes + 1"},
    ],
  },
}

// EXAMPLE:
// What is Joe's last name?
console.log(people.joe.last_name);

// Now you do it!

// What are the last names of all the people?
// HINT: Iterate through the object

for (var key in people){
	var person = people[key]
	console.log(person.last_name)
}

// What is the first genre that each person listed?
// HINT: Iterate through the object and console.log each person's first genre choice


for (var key in people) {
	var person = people[key];
	console.log(person.preferences.favorite_genres[0])
}


// What is the last name of the person sitting next to joe?
// HINT: Start by finding who joe is sitting next to, then find that person in the object

for (var key in people) {
	var person = people[key];
	if(person.first_name === "Joe"){
		var next2joe =person.sitting_next_to;
	}
	if(person.first_name.toLowerCase() === next2joe){
		var nextJoeLast = person.last_name
	}

}
console.log(nextJoeLast)

// What meal is sue going to eat?


for (var key in people) {
	var person = people[key];
	if(person.first_name === "Sue"){
		console.log(person.preferences.meal)
	}
}


// What was the date of the first correspondence with joe?

for (var key in people) {
	var person = people[key];
	if(person.first_name === "Joe"){
		var corr = person.correspondence[0];
		console.log(corr.date)
	}
}

// What was the description of the last correspondence with sue?
Sum Array

Write a method sum (sum_array in python) that takes an array of numbers and returns the sum of the numbers. These may be integers or decimals for Ruby and any instance of Num for Haskell. The numbers can also be negative. If the array does not contain any numbers then you should return 0.

Examples

Assumptions

You can assume that you are only given numbers.
You cannot assume the size of the array.
You can assume that you do get an array and if the array is empty, return 0.
What We're Testing

-----------------------MY ANSWER---------------------

// Sum Numbers
function sum (numbers) {
var total = 0;
  if(numbers === []){
  return 0};
    for (var i=0;i<numbers.length;i++) {
     total += numbers[i]

    }
    return total;
};
